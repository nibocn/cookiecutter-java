plugins {
    id 'java'
    id 'idea'
    id 'eclipse'
}
{% if cookiecutter.code_quality_check == 'yes' and cookiecutter.cvs == 'git' %}
apply from: "$rootDir/scripts/install-git-hooks.gradle"
{%- endif %}
{%- if cookiecutter.code_quality_check == 'yes' %}
apply from: "$rootDir/scripts/code-quality.gradle"
{%- endif %}
{%- if cookiecutter.jacoco_plugin == 'yes' %}
apply from: "$rootDir/scripts/jacoco.gradle"
{%- endif %}

group = '{{ cookiecutter.group_id }}'
version = '{{ cookiecutter.version }}'
sourceCompatibility = {{ cookiecutter.java_version }}

repositories {
    jcenter()
}

dependencies {
    compile 'ch.qos.logback:logback-classic:1.2.3'
    {%- if cookiecutter.enabled_lombok == 'yes'%}
    compileOnly 'org.projectlombok:lombok:1.18.2'
    annotationProcessor("org.projectlombok:lombok:1.18.2")
    {%- endif %}

    testCompile 'junit:junit:4.12'
}

tasks.withType(Test) {
    testLogging {
        exceptionFormat 'full'
    }
}

idea {
    module {
        downloadSources = false
        downloadJavadoc = false
    }
}

eclipse {
    classpath {
        downloadSources = false
    }
}
